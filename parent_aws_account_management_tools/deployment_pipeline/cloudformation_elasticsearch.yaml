AWSTemplateFormatVersion: 2010-09-09
Description: Meetup Cloudformation Template.


Parameters:

  PipelineName:
    Description: 'The stack that created the VPC'
    Type: String

  GitHTTPSURL:
    Description: 'The HTTPS clone URL of the code repository'
    Type: String

Resources:

  meetupelasticsearch:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      # DomainName: !Sub "${PipelineName}-es"
      ElasticsearchVersion: '6.4'
      ElasticsearchClusterConfig:
        InstanceCount: '1'
        InstanceType: t2.small.elasticsearch
        ZoneAwarenessEnabled: "false"
      EBSOptions:
        EBSEnabled: 'true'
        Iops: 0
        VolumeSize: 35
        VolumeType: gp2
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: 'true'
      Tags:
        - Key: PipelineName
          Value: !Sub "${PipelineName}"
        - Key: stack
          Value: !Sub "${AWS::StackName}"
        - Key: Domain name too long to make real domain name
          Value: !Sub "${PipelineName}-elasticsearch"

      VPCOptions:
        SubnetIds:
          - Fn::ImportValue: !Sub "${PipelineName}-vpc-SubnetServerA"
        SecurityGroupIds:
          - !Ref meetupElasticSearchSecurityGroup



  meetupElasticSearchSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: meetup ElasticSearch Security Group
      VpcId:
        Fn::ImportValue: !Sub "${PipelineName}-vpc-VPCID"
      Tags:
        - Key: Name
          Value: meetup ElasticSearch Security Group

  meetupElasticSearchSecurityGroupingress1:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref meetupElasticSearchSecurityGroup
      FromPort : 80
      ToPort : 80
      IpProtocol: '-1'
      CidrIp: 0.0.0.0/0
  meetupElasticSearchSecurityGroupingress2:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref meetupElasticSearchSecurityGroup
      FromPort : 443
      ToPort : 443
      IpProtocol: '-1'
      CidrIp: 0.0.0.0/0
  meetupElasticSearchSecurityGroupegress1:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref meetupElasticSearchSecurityGroup
      IpProtocol: '-1'
      CidrIp: 0.0.0.0/0


  SSMparametermeetupelasticsearchDomain:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The domain name of the shared Elasticsearch cluster 
      Name: !Sub "${PipelineName}-SSMElasticsearchDomain"
      Type: String
      Value: 
        Fn::GetAtt: [ meetupelasticsearch, DomainEndpoint ]


  elasticsearchDNSrecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Comment: DNS name for my elasticsearch cluster.
      HostedZoneId: 
        Fn::ImportValue: 
          !Sub "${PipelineName}-vpc-PrivateZoneDNSHostedZoneID"
      Name: 
        !Join
          - '.'
          - - elasticsearch
            - Fn::ImportValue: !Sub "${PipelineName}-vpc-PrivateZoneDNSHostedZoneName"
      Type: CNAME
      TTL: '60'
      ResourceRecords:
      - !GetAtt meetupelasticsearch.DomainEndpoint



Outputs:



  meetupelasticsearchoutput:
    Description: Replication Subnet in Availability Zone A
    Value: !Ref meetupelasticsearch
    Export:
      Name: !Sub '${AWS::StackName}-meetupelasticsearch'


